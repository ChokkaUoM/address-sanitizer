#summary Example: UseAfterFree
{{{
int main(int argc, char **argv) {
  int *array = new int[100];
  delete [] array;
  return array[argc];  // BOOM
}
}}}
{{{
clang++ -O1 -faddress-sanitizer example_UseAfterFree.cc
./a.out
}}}
{{{
=================================================================
==30226== ERROR: AddressSanitizer heap-use-after-free on address 0x7faa07fce084 at pc 0x40433c bp 0x7fffb3572690 sp 0x7fffb3572668
READ of size 4 at 0x7faa07fce084 thread T0
    #0 0x40433c in main example_UseAfterFree.cc:4
    #1 0x7faa0800cc4d in __libc_start_main ??:0
    #2 0x404219 in _start ??:0
0x7faa07fce084 is located 4 bytes inside of 400-byte region [0x7faa07fce080,0x7faa07fce210)
freed by thread T0 here:
    #0 0x4058fd in operator delete[](void*) _asan_rtl_
    #1 0x404303 in main example_UseAfterFree.cc:4
    #2 0x7faa0800cc4d in __libc_start_main ??:0
previously allocated by thread T0 here:
    #0 0x405579 in operator new[](unsigned long) _asan_rtl_
    #1 0x4042f3 in main example_UseAfterFree.cc:2
    #2 0x7faa0800cc4d in __libc_start_main ??:0
==30226== ABORTING
Shadow byte and word:
  0x1ff540ff9c10: fd
  0x1ff540ff9c10: fd fd fd fd fd fd fd fd
More shadow bytes:
  0x1ff540ff9bf0: fa fa fa fa fa fa fa fa
  0x1ff540ff9bf8: fa fa fa fa fa fa fa fa
  0x1ff540ff9c00: fa fa fa fa fa fa fa fa
  0x1ff540ff9c08: fa fa fa fa fa fa fa fa
=>0x1ff540ff9c10: fd fd fd fd fd fd fd fd
  0x1ff540ff9c18: fd fd fd fd fd fd fd fd
  0x1ff540ff9c20: fd fd fd fd fd fd fd fd
  0x1ff540ff9c28: fd fd fd fd fd fd fd fd
  0x1ff540ff9c30: fd fd fd fd fd fd fd fd
}}}
