#summary Example: StackOutOfBounds
{{{
int main(int argc, char **argv) {
  int stack_array[100];
  stack_array[1] = 0;
  return stack_array[argc + 100];  // BOOM
}
}}}
{{{
clang++ -O1 -fasan example_StackOutOfBounds.cc
./a.out
}}}
{{{
ASAN:SIGILL
=================================================================
HINT: if your stack trace looks short or garbled, use ASAN_OPTIONS=fast_unwind=0
==31024== ERROR: AddressSanitizer stack-buffer-overflow on address 0x7fff11dcc614 at pc 0x402288 bp 0x7fff11dcc660 sp 0x7fff11dcc460
READ of size 4 at 0x7fff11dcc614 thread T0
    #0 0x402288 in main example_StackOutOfBounds.cc:4
    #1 0x7f7260123c4d in __libc_start_main ??:0
    #2 0x4020f9 in _start ??:0
Address 0x7fff11dcc614 is located at offset 436 in frame <main> of T0's stack:
  This frame has 1 object(s):
    [32, 432) 'stack_array'
HINT: this may be a false positive if your program uses some custom stack unwind mechanism
      (longjmp and C++ exceptions *are* supported)
==31024== ABORTING
Shadow byte and word:
  0x1fffe23b98c2: f4
  0x1fffe23b98c0: 00 00 f4 f4 f3 f3 f3 f3
More shadow bytes:
  0x1fffe23b98a0: 00 00 00 00 00 00 00 00
  0x1fffe23b98a8: 00 00 00 00 00 00 00 00
  0x1fffe23b98b0: 00 00 00 00 00 00 00 00
  0x1fffe23b98b8: 00 00 00 00 00 00 00 00
=>0x1fffe23b98c0: 00 00 f4 f4 f3 f3 f3 f3
  0x1fffe23b98c8: 00 00 00 00 00 00 00 00
  0x1fffe23b98d0: 00 00 00 00 00 00 00 00
  0x1fffe23b98d8: 00 00 00 00 00 00 00 00
  0x1fffe23b98e0: 00 00 00 00 00 00 00 00
}}}
