#summary Example: StackOutOfBounds
{{{
int main(int argc, char **argv) {
  int stack_array[100];
  stack_array[1] = 0;
  return stack_array[argc + 100];  // BOOM
}
}}}
{{{
clang++ -O1 -faddress-sanitizer example_StackOutOfBounds.cc
./a.out
}}}
{{{
=================================================================
==10589== ERROR: AddressSanitizer stack-buffer-overflow on address 0x7f5620d981b4 at pc 0x4024e8 bp 0x7fff101cbc90 sp 0x7fff101cbc88
READ of size 4 at 0x7f5620d981b4 thread T0
    #0 0x4024e8 in main example_StackOutOfBounds.cc:4
    #1 0x7f5621db6c4d in __libc_start_main ??:0
    #2 0x402349 in _start ??:0
Address 0x7f5620d981b4 is located at offset 436 in frame <main> of T0's stack:
  This frame has 1 object(s):
    [32, 432) 'stack_array'
HINT: this may be a false positive if your program uses some custom stack unwind mechanism
      (longjmp and C++ exceptions *are* supported)
==10589== ABORTING
Shadow byte and word:
  0x1feac41b3036: f4
  0x1feac41b3030: 00 00 00 00 00 00 f4 f4
More shadow bytes:
  0x1feac41b3010: 00 00 00 00 00 00 00 00
  0x1feac41b3018: 00 00 00 00 00 00 00 00
  0x1feac41b3020: 00 00 00 00 00 00 00 00
  0x1feac41b3028: 00 00 00 00 00 00 00 00
=>0x1feac41b3030: 00 00 00 00 00 00 f4 f4
  0x1feac41b3038: f3 f3 f3 f3 00 00 00 00
  0x1feac41b3040: 00 00 00 00 00 00 00 00
  0x1feac41b3048: 00 00 00 00 00 00 00 00
  0x1feac41b3050: 00 00 00 00 00 00 00 00
}}}
