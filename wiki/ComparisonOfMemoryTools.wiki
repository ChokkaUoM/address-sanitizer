#summary Comparison of various memory error detectors

*TODO*

||            || AddressSanitizer || [http://valgrind.org Valgrind/Memcheck] || [http://dynamorio.org/drmemory.html Dr. Memory] || [http://gcc.gnu.org/wiki/Mudflap_Pointer_Debugging Mudflap] || Guard Page  ||
|| technology || CTI              || DBI               || DBI            || CTI           || Library   ||
|| ARCH       || x86,x86_64       || x86,x86_64,ARM,PPC|| x86,x86_64     || all (?)       || all(?)    ||
|| OS         || Linux, Mac       || Linux, Mac        || Windows, Linux || Linux, Mac(?) || All (1)   ||
|| Slowdown   || 2x               || 20x               || 10x            || ?             || ?         ||
|| Bugs:      ||                  ||                   ||                ||               ||           ||
|| Heap OOB   || yes              || yes               || yes            || yes           || some      ||
|| Stack OOB  || yes              || no                || no             || some          || no        ||
|| Global OOB || yes              || no                || no             || ?             || no        ||
|| UAF        || yes              || yes               || yes            || yes           || yes       ||
|| UAR        || some             || no                || no             || no            || no        ||
|| UMR        || no               || yes               || yes            || ?             || no        ||


*DBI*: dynamic binary instrumentation <BR>
*CTI*: compile-time instrumentation <BR>
*UMR*: uninitialized memory reads <BR>
*UAF*: use-after-free (aka dangling pointer)  <BR>
*UAR*: use-after-return <BR>

Variations of Guard Page memory error detectors are availabel on all major OSes:
  * [http://perens.com/FreeSoftware/ Electric fence] on Linux
  * PageHeap on Windows
  * and GuardMalloc in Mac
